Set-Location $PSScriptRoot

$DesktopSymlinkPath="$home\Desktop\ChocsAway"
$MyFavouriteEditorsProcessName="notepad++"
$MyFavouriteEditorLocation="C:\Program Files\Notepad++\notepad++.exe"
$ChocoConfigFileLocation="packages.config"
$ChocoLogLocation="C:\ProgramData\chocolatey\logs\chocolatey.log"

# If the symlink isn't on the desktop, put it there
# https://stackoverflow.com/a/29002672/3536094
# https://stackoverflow.com/a/31756762/3536094
If( !(Test-Path -Path $DesktopSymlinkPath)) {
	Write-Host "Symlinking the runner for this script to the desktop"
    New-Item -ItemType SymbolicLink -Path "$home\Desktop" -Name "ChocsAway" -Value "$PSScriptRoot\1.ChocsAway.bat"
}

# install chocolatey if there's no choco command to be seen
if (!(Get-Command choco.exe -ErrorAction SilentlyContinue)) {
   #this is just the install command from https://chocolatey.org/install
   Write-Host "Chocolatey not installed...installed"
   Set-ExecutionPolicy Bypass -Scope Process -Force; [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072; iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'))
}

# https://stackoverflow.com/a/28482050/3536094
if((get-process $MyFavouriteEditorsProcessName -ea SilentlyContinue) -eq $Null){ 
	Write-Host "opening $MyFavouriteEditorsProcessName so we can see and edit the config file"
	# note the wait - see https://stackoverflow.com/q/45752097/3536094
	# and https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.management/start-process?view=powershell-7
      Start-Process -wait $MyFavouriteEditorLocation $ChocoConfigFileLocation
} else { 
  write-host "$MyFavouriteEditorsProcessName already running, opening config file in it" 
  & $MyFavouriteEditorLocation $ChocoConfigFileLocation
}

# waiting in powershell is interesting see https://adamtheautomator.com/how-to-pause-a-powershell-script/ - great article
Write-Host "Press any Key to start Installing and Updating..."
# you have to pipe this to null to not see it see https://stackoverflow.com/a/6461021/3536094
$pause = $host.UI.RawUI.ReadKey('NoEcho,IncludeKeyDown') |  out-null
$pause

# you don't need to update chocolatey itself if you upgrade all, because its in its own upgrade all list
# in fact there's a number of internal choco packages in the list generated by 'WhatDoIHaveInstalled' in this scripts folder
# so its probably much better to use this method of installing and upgrading than the other advice on the internet to use the 
# upgrade or install commands with a loop, unless you loop through the auto-generated list
Write-Host "installing from $PSScriptRoot\$ChocoConfigFileLocation ..."
cinst -y packages.config
Write-Host "Finished Installing"
Write-Host "Now let's check for updates...."
cup all -y

Write-Host "Lastly, just to help out, I'll open that log"
if((get-process $MyFavouriteEditorsProcessName -ea SilentlyContinue) -eq $Null){ 
	Write-Host "opening $MyFavouriteEditorsProcessName so we can see Choco's log file"
      Start-Process -wait $MyFavouriteEditorLocation $ChocoLogLocation
} else { 
  write-host "$MyFavouriteEditorsProcessName already running, opening Choco's log file in it" 
  # note call operator & see https://stackoverflow.com/a/42670276/3536094
  & $MyFavouriteEditorLocation $ChocoLogLocation
}

Write-Host "Press Any Key to Exit"
# for some reason the $pause command isn't halting the script, I think because of the piping
$host.UI.RawUI.ReadKey('NoEcho,IncludeKeyDown')
